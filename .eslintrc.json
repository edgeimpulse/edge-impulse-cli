{
    "root": true,
    "env": {
        "es6": true,
        "node": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module",
        "ecmaVersion": 2021
    },
    "plugins": ["@typescript-eslint", "@stylistic", "mocha", "n"],
    "rules": {
        "no-restricted-globals": [
            "error",
            "name",
            "close",
            "history",
            "length",
            "open",
            "parent",
            "scroll",
            "self",
            "stop",
            "event",
            {
                "name": "parseInt",
                "message": "Use 'Number()' instead of 'parseInt'."
            },
            {
                "name": "parseFloat",
                "message": "Use 'Number()' instead of 'parseFloat'."
            }
        ],
        "@stylistic/member-delimiter-style": ["off"],
        "@stylistic/indent": ["off"],
        "@stylistic/semi": ["error", "always"],
        "@stylistic/comma-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/only-throw-error": "warn",
        "@typescript-eslint/restrict-plus-operands": "warn",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",
        "@typescript-eslint/no-unsafe-return": "warn",
        "@typescript-eslint/ban-tslint-comment": "warn",
        "@typescript-eslint/require-await": "warn",
        "@typescript-eslint/prefer-promise-reject-errors": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "warn",
        "@typescript-eslint/no-redundant-type-constituents": "off",
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                "accessibility": "no-public"
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "variable",
                "format": ["camelCase", "UPPER_CASE", "PascalCase"],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            }
        ],
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "checksVoidReturn": {
                    "arguments": false,
                    "returns": false,
                    "properties": false
                }
            }
        ],
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-shadow": [
            "error",
            {
                "hoist": "all"
            }
        ],
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/prefer-for-of": "off",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/triple-slash-reference": [
            "error",
            {
                "path": "always",
                "types": "prefer-import",
                "lib": "always"
            }
        ],
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-this-alias": "off",
        "@typescript-eslint/prefer-as-const": "off",
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "@stylistic/array-bracket-spacing": ["error", "always", { "objectsInArrays": false }],
        "@stylistic/arrow-parens": ["off", "always"],
        "@stylistic/brace-style": ["error", "stroustrup", { "allowSingleLine": true }],
        "@stylistic/comma-dangle": "off",
        "complexity": "off",
        "constructor-super": "error",
        "curly": ["error", "multi-line"],
        "eqeqeq": ["error", "smart"],
        "guard-for-in": "error",
        "id-denylist": "error",
        "id-match": "error",
        "max-classes-per-file": "off",
        "@stylistic/space-infix-ops": ["error", { "int32Hint": false }],
        "@stylistic/max-len": [
            "error",
            {
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true,
                "ignoreRegExpLiterals": true,
                "code": 120,
                "ignorePattern": "^\\s*[/][/*]\\s*eslint-disable-next-line"
            }
        ],
        "@stylistic/new-parens": "error",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-console": "off",
        "no-constant-binary-expression": "error",
        "no-constant-condition": ["error", { "checkLoops": false }],
        "no-debugger": "error",
        "no-empty": "error",
        "no-eval": "error",
        "no-fallthrough": ["error", { "commentPattern": "break[\\s\\w]*omitted" }],
        "no-invalid-this": "off",
        "no-irregular-whitespace": "error",
        "no-inner-declarations": "off",
        "no-new-object": "error",
        "no-array-constructor": "error",
        "no-iterator": "error",
        "no-new-wrappers": "error",
        "no-shadow": "off",
        "no-async-promise-executor": "off",
        "no-throw-literal": "error",
        "@stylistic/no-trailing-spaces": "error",
        "@stylistic/no-mixed-spaces-and-tabs": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unused-expressions": "off",
        "no-unused-labels": "error",
        "no-use-before-define": "off",
        "no-var": "warn",
        "object-shorthand": "off",
        "one-var": ["error", "never"],
        "prefer-rest-params": "error",
        "quotes": "off",
        "no-bitwise": "error",
        "radix": "error",
        "@stylistic/spaced-comment": [
            "error",
            "always",
            {
                "line": { "exceptions": [], "markers": ["/"] },
                "block": { "balanced": true, "exceptions": ["*"] }
            }
        ],
        "@stylistic/type-generic-spacing": ["error"],
        "@stylistic/type-named-tuple-spacing": ["error"],
        "use-isnan": "error",
        "valid-typeof": "off",
        "no-useless-escape": "off",
        "mocha/no-setup-in-describe": "off",
        "mocha/no-async-describe": "off",
        "mocha/no-exclusive-tests": "error",
        "mocha/no-skipped-tests": "error",
        "mocha/no-identical-title": "off",
        "mocha/no-mocha-arrows": "off",
        "mocha/consistent-spacing-between-blocks": "off",
        "mocha/no-exports": "off",
        "n/no-unsupported-features/es-builtins": [
            "error",
            {
                "version": ">=16.0.0",
                "ignores": []
            }
        ],
        "n/no-unsupported-features/node-builtins": [
            "error",
            {
                "version": ">=16.0.0",
                "ignores": []
            }
        ]
    }
}

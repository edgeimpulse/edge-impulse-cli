/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AnomalyModelMetadata } from './anomalyModelMetadata';
import { AnomalyModelMetadataClusters } from './anomalyModelMetadataClusters';
import { GenericApiResponse } from './genericApiResponse';
import { KerasModelMetadataMetrics } from './kerasModelMetadataMetrics';
import { KerasModelTypeEnum } from './kerasModelTypeEnum';

export class AnomalyModelMetadataResponse {
    /**
    * Whether the operation succeeded
    */
    'success': boolean;
    /**
    * Optional error description (set if \'success\' was false)
    */
    'error'?: string;
    /**
    * Date when the model was trained
    */
    'created': Date;
    /**
    * Scale input for StandardScaler. Values are scaled like this (where `ix` is axis index): `input[ix] = (input[ix] - mean[ix]) / scale[ix];`
    */
    'scale': Array<number>;
    /**
    * Mean input for StandardScaler. Values are scaled like this (where `ix` is axis index): `input[ix] = (input[ix] - mean[ix]) / scale[ix];`
    */
    'mean': Array<number>;
    /**
    * Trained K-means clusters
    */
    'clusters': Array<AnomalyModelMetadataClusters>;
    /**
    * Which axes were included during training (by index)
    */
    'axes': Array<number>;
    /**
    * Default minimum confidence rating required before tagging as anomaly, based on scores of training data (GMM only).
    */
    'defaultMinimumConfidenceRating'?: number;
    /**
    * The types of model that are available
    */
    'availableModelTypes'?: Array<KerasModelTypeEnum>;
    'recommendedModelType'?: KerasModelTypeEnum;
    /**
    * Metrics for each of the available model types
    */
    'modelValidationMetrics'?: Array<KerasModelMetadataMetrics>;
    'hasTrainedModel'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "success",
            "baseName": "success",
            "type": "boolean"
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "string"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date"
        },
        {
            "name": "scale",
            "baseName": "scale",
            "type": "Array<number>"
        },
        {
            "name": "mean",
            "baseName": "mean",
            "type": "Array<number>"
        },
        {
            "name": "clusters",
            "baseName": "clusters",
            "type": "Array<AnomalyModelMetadataClusters>"
        },
        {
            "name": "axes",
            "baseName": "axes",
            "type": "Array<number>"
        },
        {
            "name": "defaultMinimumConfidenceRating",
            "baseName": "defaultMinimumConfidenceRating",
            "type": "number"
        },
        {
            "name": "availableModelTypes",
            "baseName": "availableModelTypes",
            "type": "Array<KerasModelTypeEnum>"
        },
        {
            "name": "recommendedModelType",
            "baseName": "recommendedModelType",
            "type": "KerasModelTypeEnum"
        },
        {
            "name": "modelValidationMetrics",
            "baseName": "modelValidationMetrics",
            "type": "Array<KerasModelMetadataMetrics>"
        },
        {
            "name": "hasTrainedModel",
            "baseName": "hasTrainedModel",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return AnomalyModelMetadataResponse.attributeTypeMap;
    }
}


/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BlockParamsVisualAnomalyGmm } from './blockParamsVisualAnomalyGmm';
import { BlockParamsVisualAnomalyPatchcore } from './blockParamsVisualAnomalyPatchcore';

/**
* Training parameters specific to the type of the learn block. Parameters may be adjusted depending on the model defined in the visual layers. Used for our built-in blocks.
*/
export class BlockParameters {
    /**
    * The backbone to use for feature extraction
    */
    'backbone'?: string;
    /**
    * The number of layers in the feature extractor (1-3)
    */
    'numLayers'?: number;
    /**
    * The pool size for the feature extractor
    */
    'poolSize'?: number;
    /**
    * The sampling ratio for the coreset, used for anomaly scoring
    */
    'samplingRatio'?: number;
    /**
    * The number of nearest neighbors to consider, used for anomaly scoring
    */
    'numNearestNeighbors'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "backbone",
            "baseName": "backbone",
            "type": "string"
        },
        {
            "name": "numLayers",
            "baseName": "numLayers",
            "type": "number"
        },
        {
            "name": "poolSize",
            "baseName": "poolSize",
            "type": "number"
        },
        {
            "name": "samplingRatio",
            "baseName": "samplingRatio",
            "type": "number"
        },
        {
            "name": "numNearestNeighbors",
            "baseName": "numNearestNeighbors",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return BlockParameters.attributeTypeMap;
    }
}


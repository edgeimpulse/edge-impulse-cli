/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AnomalyResult } from './anomalyResult';
import { ClassifySampleResponseClassificationDetails } from './classifySampleResponseClassificationDetails';
import { ImpulseLearnBlock } from './impulseLearnBlock';
import { ObjectDetectionLastLayer } from './objectDetectionLastLayer';
import { StructuredClassifyResult } from './structuredClassifyResult';
import { StructuredLabel } from './structuredLabel';

export class ClassifySampleResponseClassification {
    'learnBlock': ImpulseLearnBlock;
    /**
    * Classification result, one item per window.
    */
    'result': Array<{ [key: string]: number; }>;
    /**
    * Anomaly scores and computed metrics for GMM anomaly detection, one item per window.
    */
    'anomalyResult'?: Array<AnomalyResult>;
    /**
    * Results of inferencing that returns structured data, such as object detection
    */
    'structuredResult'?: Array<StructuredClassifyResult>;
    /**
    * The minimum confidence rating for this block. For regression, this is the absolute error (which can be larger than 1).
    */
    'minimumConfidenceRating': number;
    /**
    * Structured outputs and computed metrics for some model types (e.g. object detection), one item per window.
    */
    'details'?: Array<ClassifySampleResponseClassificationDetails>;
    'objectDetectionLastLayer'?: ObjectDetectionLastLayer;
    /**
    * An array with an expected label per window.
    */
    'expectedLabels': Array<StructuredLabel>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "learnBlock",
            "baseName": "learnBlock",
            "type": "ImpulseLearnBlock"
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "Array<{ [key: string]: number; }>"
        },
        {
            "name": "anomalyResult",
            "baseName": "anomalyResult",
            "type": "Array<AnomalyResult>"
        },
        {
            "name": "structuredResult",
            "baseName": "structuredResult",
            "type": "Array<StructuredClassifyResult>"
        },
        {
            "name": "minimumConfidenceRating",
            "baseName": "minimumConfidenceRating",
            "type": "number"
        },
        {
            "name": "details",
            "baseName": "details",
            "type": "Array<ClassifySampleResponseClassificationDetails>"
        },
        {
            "name": "objectDetectionLastLayer",
            "baseName": "objectDetectionLastLayer",
            "type": "ObjectDetectionLastLayer"
        },
        {
            "name": "expectedLabels",
            "baseName": "expectedLabels",
            "type": "Array<StructuredLabel>"
        }    ];

    static getAttributeTypeMap() {
        return ClassifySampleResponseClassification.attributeTypeMap;
    }
}


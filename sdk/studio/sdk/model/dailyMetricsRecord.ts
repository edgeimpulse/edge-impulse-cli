/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class DailyMetricsRecord {
    /**
    * Date of the metrics record.
    */
    'date': Date;
    /**
    * Total number of users, if the metrics record applies to a non-developer profile organization. For developer profile organizations, we default to 0. 
    */
    'totalUsers': number;
    /**
    * Total number of staff users, if the metrics record applies to a non-developer profile organization. For developer profile organizations, we default to 0. 
    */
    'totalStaffUsers': number;
    /**
    * Total number of projects at the end of the metrics record date. 
    */
    'totalProjects': number;
    /**
    * Total CPU compute time since contract start date, or organization / user creation date, at the end of the metrics record date. 
    */
    'totalCurrentContractCpuComputeTimeSeconds': number;
    /**
    * Total GPU compute time since contract start date, or organization / user creation date, at the end of the metrics record date. 
    */
    'totalCurrentContractGpuComputeTimeSeconds': number;
    /**
    * Total compute time since contract start date, or organization / user creation date, at the end of the metrics record date. Compute time is calculated as CPU + 3*GPU compute time. 
    */
    'totalCurrentContractComputeTimeSeconds': number;
    /**
    * Date from which the total compute time is calculated. This is the contract start date for billing organizations, or organization / user creation date. 
    */
    'computeTimeCalculatedSince': Date;
    /**
    * Total storage size in bytes at the end of the metrics record date. 
    */
    'totalStorageSizeBytes': number;
    /**
    * Number of users added during the metrics record date. 
    */
    'usersAdded': number;
    /**
    * Number of staff users added during the metrics record date. 
    */
    'staffUsersAdded'?: number;
    /**
    * Number of users deleted during the metrics record date. 
    */
    'usersDeleted': number;
    /**
    * Number of staff users deleted during the metrics record date. 
    */
    'staffUsersDeleted'?: number;
    /**
    * Number of projects added during the metrics record date. 
    */
    'projectsAdded': number;
    /**
    * Number of projects deleted during the metrics record date. 
    */
    'projectsDeleted': number;
    /**
    * Total CPU compute time during the metrics record date. 
    */
    'cpuComputeTimeSeconds': number;
    /**
    * Total GPU compute time during the metrics record date. 
    */
    'gpuComputeTimeSeconds': number;
    /**
    * Total compute time during the metrics record date. Compute time is calculated as CPU + 3*GPU compute time. 
    */
    'computeTimeSeconds': number;
    /**
    * Total storage size in bytes added during the metrics record date. 
    */
    'storageBytesAdded': number;
    /**
    * Total storage size in bytes deleted during the metrics record date. 
    */
    'storageBytesDeleted': number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "date",
            "baseName": "date",
            "type": "Date"
        },
        {
            "name": "totalUsers",
            "baseName": "totalUsers",
            "type": "number"
        },
        {
            "name": "totalStaffUsers",
            "baseName": "totalStaffUsers",
            "type": "number"
        },
        {
            "name": "totalProjects",
            "baseName": "totalProjects",
            "type": "number"
        },
        {
            "name": "totalCurrentContractCpuComputeTimeSeconds",
            "baseName": "totalCurrentContractCpuComputeTimeSeconds",
            "type": "number"
        },
        {
            "name": "totalCurrentContractGpuComputeTimeSeconds",
            "baseName": "totalCurrentContractGpuComputeTimeSeconds",
            "type": "number"
        },
        {
            "name": "totalCurrentContractComputeTimeSeconds",
            "baseName": "totalCurrentContractComputeTimeSeconds",
            "type": "number"
        },
        {
            "name": "computeTimeCalculatedSince",
            "baseName": "computeTimeCalculatedSince",
            "type": "Date"
        },
        {
            "name": "totalStorageSizeBytes",
            "baseName": "totalStorageSizeBytes",
            "type": "number"
        },
        {
            "name": "usersAdded",
            "baseName": "usersAdded",
            "type": "number"
        },
        {
            "name": "staffUsersAdded",
            "baseName": "staffUsersAdded",
            "type": "number"
        },
        {
            "name": "usersDeleted",
            "baseName": "usersDeleted",
            "type": "number"
        },
        {
            "name": "staffUsersDeleted",
            "baseName": "staffUsersDeleted",
            "type": "number"
        },
        {
            "name": "projectsAdded",
            "baseName": "projectsAdded",
            "type": "number"
        },
        {
            "name": "projectsDeleted",
            "baseName": "projectsDeleted",
            "type": "number"
        },
        {
            "name": "cpuComputeTimeSeconds",
            "baseName": "cpuComputeTimeSeconds",
            "type": "number"
        },
        {
            "name": "gpuComputeTimeSeconds",
            "baseName": "gpuComputeTimeSeconds",
            "type": "number"
        },
        {
            "name": "computeTimeSeconds",
            "baseName": "computeTimeSeconds",
            "type": "number"
        },
        {
            "name": "storageBytesAdded",
            "baseName": "storageBytesAdded",
            "type": "number"
        },
        {
            "name": "storageBytesDeleted",
            "baseName": "storageBytesDeleted",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return DailyMetricsRecord.attributeTypeMap;
    }
}


/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DeviceInferenceInfo } from './deviceInferenceInfo';
import { DeviceSensors } from './deviceSensors';

export class Device {
    'id': number;
    /**
    * Unique identifier (such as MAC address) for a device
    */
    'deviceId': string;
    'created': Date;
    /**
    * Last message that was received from the device (ignoring keep-alive)
    */
    'lastSeen': Date;
    'name': string;
    'deviceType': string;
    'sensors': Array<DeviceSensors>;
    /**
    * Whether the device is connected to the remote management interface. This property is deprecated, use `remoteMgmtMode` instead.
    */
    'remoteMgmtConnected': boolean;
    /**
    * The remote management host that the device is connected to
    */
    'remoteMgmtHost'?: string;
    'supportsSnapshotStreaming': boolean;
    /**
    * Replaces `remote_mgmt_connected`. Shows whether the device is connected to the remote management interface, and in which mode.
    */
    'remoteMgmtMode': DeviceRemoteMgmtModeEnum;
    'inferenceInfo'?: DeviceInferenceInfo;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "deviceId",
            "baseName": "deviceId",
            "type": "string"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date"
        },
        {
            "name": "lastSeen",
            "baseName": "lastSeen",
            "type": "Date"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "deviceType",
            "baseName": "deviceType",
            "type": "string"
        },
        {
            "name": "sensors",
            "baseName": "sensors",
            "type": "Array<DeviceSensors>"
        },
        {
            "name": "remoteMgmtConnected",
            "baseName": "remote_mgmt_connected",
            "type": "boolean"
        },
        {
            "name": "remoteMgmtHost",
            "baseName": "remote_mgmt_host",
            "type": "string"
        },
        {
            "name": "supportsSnapshotStreaming",
            "baseName": "supportsSnapshotStreaming",
            "type": "boolean"
        },
        {
            "name": "remoteMgmtMode",
            "baseName": "remoteMgmtMode",
            "type": "DeviceRemoteMgmtModeEnum"
        },
        {
            "name": "inferenceInfo",
            "baseName": "inferenceInfo",
            "type": "DeviceInferenceInfo"
        }    ];

    static getAttributeTypeMap() {
        return Device.attributeTypeMap;
    }
}


export type DeviceRemoteMgmtModeEnum = 'disconnected' | 'ingestion' | 'inference';
export const DeviceRemoteMgmtModeEnumValues: string[] = ['disconnected', 'ingestion', 'inference'];

/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { OAuthScope } from './oAuthScope';
import { OauthGrantType } from './oauthGrantType';

/**
* Metadata and configuration details for a registered OAuth client application.
*/
export class OauthClient {
    /**
    * Internal database identifier for the OAuth client. This value is used only within the system and is not exposed to or used by the OAuth client itself. 
    */
    'id': number;
    /**
    * The public, unique identifier assigned to the OAuth client. This value is shared with the client application and is used to identify the client during OAuth authentication and authorization flows. 
    */
    'clientId': string;
    /**
    * Human-readable name of the OAuth client application.
    */
    'name': string;
    /**
    * Human-readable description providing details about the OAuth client application and its purpose.
    */
    'description'?: string;
    /**
    * List of allowed redirect URIs for the OAuth client. After successful authorization, users are redirected to one of these URIs. Only these URIs are permitted to prevent redirection attacks. 
    */
    'redirectUris'?: Array<string>;
    /**
    * List of OAuth 2.0 grant types that the client is permitted to use. Common values include \'authorization_code\', \'client_credentials\', \'refresh_token\', etc. 
    */
    'allowedGrantTypes'?: Array<OauthGrantType>;
    /**
    * List of OAuth scopes that the client is allowed to request. Scopes define the level of access the client has to user resources. For example, \'projects:read\', \'projects:write\', etc. 
    */
    'scopes'?: Array<OAuthScope>;
    /**
    * Timestamp indicating when the OAuth client was registered.
    */
    'createdAt': Date;
    /**
    * Unique identifier of the user who registered the OAuth client.
    */
    'createdByUserId': number;
    /**
    * Name of the user who registered the OAuth client.
    */
    'createdByUserName'?: string;
    /**
    * Email address of the user who registered the OAuth client.
    */
    'createdByUserEmail'?: string;
    /**
    * Indicates whether this OAuth client requires explicit user consent. Internal clients may not require consent.
    */
    'requiresConsent'?: boolean;
    /**
    * URL of the OAuth client logo.
    */
    'logoUrl'?: string;
    /**
    * Name of the owner of the OAuth client.
    */
    'ownerName'?: string;
    /**
    * URL of the owner of the OAuth client.
    */
    'ownerUrl'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "clientId",
            "baseName": "clientId",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "redirectUris",
            "baseName": "redirectUris",
            "type": "Array<string>"
        },
        {
            "name": "allowedGrantTypes",
            "baseName": "allowedGrantTypes",
            "type": "Array<OauthGrantType>"
        },
        {
            "name": "scopes",
            "baseName": "scopes",
            "type": "Array<OAuthScope>"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date"
        },
        {
            "name": "createdByUserId",
            "baseName": "createdByUserId",
            "type": "number"
        },
        {
            "name": "createdByUserName",
            "baseName": "createdByUserName",
            "type": "string"
        },
        {
            "name": "createdByUserEmail",
            "baseName": "createdByUserEmail",
            "type": "string"
        },
        {
            "name": "requiresConsent",
            "baseName": "requiresConsent",
            "type": "boolean"
        },
        {
            "name": "logoUrl",
            "baseName": "logoUrl",
            "type": "string"
        },
        {
            "name": "ownerName",
            "baseName": "ownerName",
            "type": "string"
        },
        {
            "name": "ownerUrl",
            "baseName": "ownerUrl",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return OauthClient.attributeTypeMap;
    }
}


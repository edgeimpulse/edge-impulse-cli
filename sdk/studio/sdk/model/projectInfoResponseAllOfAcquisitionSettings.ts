/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class ProjectInfoResponseAllOfAcquisitionSettings {
    /**
    * Interval during the last acquisition, or the recommended interval based on the data set.
    */
    'intervalMs': number;
    /**
    * Length of the last acquisition, or a recommended interval based on the data set.
    */
    'lengthMs': number;
    /**
    * Sensor that was used during the last acquisition.
    */
    'sensor'?: string;
    /**
    * Label that was used during the last acquisition.
    */
    'label'?: string;
    /**
    * Length of the last sample segment after segmenting a larger sample.
    */
    'segmentLength'?: number;
    /**
    * Whether to auto-shift segments
    */
    'segmentShift': boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "intervalMs",
            "baseName": "intervalMs",
            "type": "number"
        },
        {
            "name": "lengthMs",
            "baseName": "lengthMs",
            "type": "number"
        },
        {
            "name": "sensor",
            "baseName": "sensor",
            "type": "string"
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string"
        },
        {
            "name": "segmentLength",
            "baseName": "segmentLength",
            "type": "number"
        },
        {
            "name": "segmentShift",
            "baseName": "segmentShift",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ProjectInfoResponseAllOfAcquisitionSettings.attributeTypeMap;
    }
}

